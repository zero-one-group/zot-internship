"""
Each new term in the Fibonacci sequence is generated by adding the previous two terms.
By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million,
find the sum of the even-valued terms.
"""

# Imperative style
fib_numbers = []
last, current = 0, 1
while current + last < 4e6:
    last, current = current, current + last
    fib_numbers.append(current)
fib_numbers

even_fib_numbers = []
for fib in fib_numbers:
    if fib % 2 == 0:
        even_fib_numbers.append(fib)
sum(even_fib_numbers)

# Declarative style (sort of): make a generator + sum generator
def fib_numbers():
    last, current = 0, 1
    while current + last < 4e6:
        last, current = current, current + last
        yield current

# Google: python list comprehension performance
sum(fib for fib in fib_numbers() if fib % 2 == 0)
