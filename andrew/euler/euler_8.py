'''
Find the thirteen adjacent digits in the 1000-digit number that have the greatest product.
What is the value of this product?
'''

import numpy as np

def multiply_list(number):
    list_num = [int(num) for num in str(number)]
    return np.prod(list_num)

def adjacent_number_multiplier(str_num, adjacent_digits):
    res = []
    start = 0
    while start < len(str_num) - adjacent_digits + 1:
        numbers = str_num[start:(start + adjacent_digits)]
        start = start + 1
        res.append(multiply_list(numbers))
    return res

str_num = "731671765313306249192251196744265747423553491949349698352031277450632623957831801698480\
18694788518438586156078911294949545950173795833195285320880551112540698747158523863050715693290963\
29522744304355766896648950445244523161731856403098711121722383113622298934233803081353362766142828\
06444486645238749303589072962904915604407723907138105158593079608667017242712188399879790879227492\
19016997208880937766572733300105336788122023542180975125454059475224352584907711670556013604839586\
44670632441572215539753697817977846174064955149290862569321978468622482839722413756570560574902614\
07972968652414535100474821663704844031998900088952434506585412275886668811642717147992444292823086\
34656748139191231628245861786645835912456652947654568284891288314260769004224219022671055626321111\
10937054421750694165896040807198403850962455444362981230987879927244284909188845801561660979191338\
75499200524063689912560717606058861164671094050775410022569831552000559357297257163626956188267042\
8252483600823257530420752963450"

adjacent_digits = 13
answer = adjacent_number_multiplier(str_num, adjacent_digits)

ind = answer.index(max(answer))
num = str_num[ind:(ind+adjacent_digits)]
print("Adjacent digits that give the greatest product:", num)
print("Product is", max(answer))
